package com.gilpereda.adventsofcode.adventsofcode2021.day24

import arrow.core.Either
import arrow.core.left
import arrow.core.right
import com.gilpereda.adventsofcode.adventsofcode2021.Executable

val res0 = setOf(18, 17, 16, 15, 14, 13, 12, 11, 10)
val res1 = setOf(
    271,
    297,
    323,
    349,
    375,
    401,
    427,
    453,
    479,
    270,
    296,
    322,
    348,
    374,
    400,
    426,
    452,
    478,
    0,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    10,
    11,
    12,
    13,
    14,
    15,
    16,
    17,
    18,
    19,
    20,
    21,
    22,
    23,
    24,
    25,
    269,
    295,
    321,
    347,
    373,
    399,
    425,
    451,
    477,
    9,
    268,
    294,
    320,
    346,
    372,
    398,
    424,
    450,
    476,
    267,
    293,
    319,
    345,
    371,
    397,
    423,
    449,
    475,
    266,
    292,
    318,
    344,
    370,
    396,
    422,
    448,
    474,
    265,
    291,
    317,
    343,
    369,
    395,
    421,
    447,
    473,
    264,
    290,
    316,
    342,
    368,
    394,
    420,
    446,
    472,
    263,
    289,
    315,
    341,
    367,
    393,
    419,
    445,
    471
)
val res2 = setOf(
    0,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    11,
    12,
    13,
    14,
    15,
    16,
    17,
    18,
    19,
    20,
    21,
    22,
    23,
    24,
    25,
    41,
    67,
    93,
    119,
    145,
    171,
    197,
    223,
    249,
    275,
    301,
    327,
    353,
    379,
    405,
    431,
    457,
    483,
    509,
    535,
    561,
    587,
    613,
    639,
    665,
    6853,
    6879,
    6905,
    6931,
    6957,
    6983,
    7009,
    7035,
    7061,
    7529,
    7555,
    7581,
    7607,
    7633,
    7659,
    7685,
    7711,
    7737,
    8205,
    8231,
    8257,
    8283,
    8309,
    8335,
    8361,
    8387,
    8413,
    8881,
    8907,
    8933,
    8959,
    8985,
    9011,
    9037,
    9063,
    9089,
    9557,
    9583,
    9609,
    9635,
    9661,
    9687,
    9713,
    9739,
    9765,
    10233,
    10259,
    10285,
    10311,
    10337,
    10363,
    10389,
    10415,
    10441,
    10909,
    10935,
    10961,
    10987,
    11013,
    11039,
    11065,
    11091,
    11117,
    11585,
    11611,
    11637,
    11663,
    11689,
    11715,
    11741,
    11767,
    11793,
    12261,
    12287,
    12313,
    12339,
    12365,
    12391,
    12417,
    12443,
    12469,
    40,
    66,
    92,
    118,
    144,
    170,
    196,
    222,
    248,
    274,
    300,
    326,
    352,
    378,
    404,
    430,
    456,
    482,
    508,
    534,
    560,
    586,
    612,
    638,
    664,
    6852,
    6878,
    6904,
    6930,
    6956,
    6982,
    7008,
    7034,
    7060,
    7528,
    7554,
    7580,
    7606,
    7632,
    7658,
    7684,
    7710,
    7736,
    8204,
    8230,
    8256,
    8282,
    8308,
    8334,
    8360,
    8386,
    8412,
    8880,
    8906,
    8932,
    8958,
    8984,
    9010,
    9036,
    9062,
    9088,
    9556,
    9582,
    9608,
    9634,
    9660,
    9686,
    9712,
    9738,
    9764,
    10232,
    10258,
    10284,
    10310,
    10336,
    10362,
    10388,
    10414,
    10440,
    10908,
    10934,
    10960,
    10986,
    11012,
    11038,
    11064,
    11090,
    11116,
    11584,
    11610,
    11636,
    11662,
    11688,
    11714,
    11740,
    11766,
    11792,
    12260,
    12286,
    12312,
    12338,
    12364,
    12390,
    12416,
    12442,
    12468,
    39,
    65,
    91,
    117,
    143,
    169,
    195,
    221,
    247,
    273,
    299,
    325,
    351,
    377,
    403,
    429,
    455,
    481,
    507,
    533,
    559,
    585,
    611,
    637,
    663,
    6851,
    6877,
    6903,
    6929,
    6955,
    6981,
    7007,
    7033,
    7059,
    7527,
    7553,
    7579,
    7605,
    7631,
    7657,
    7683,
    7709,
    7735,
    8203,
    8229,
    8255,
    8281,
    8307,
    8333,
    8359,
    8385,
    8411,
    8879,
    8905,
    8931,
    8957,
    8983,
    9009,
    9035,
    9061,
    9087,
    9555,
    9581,
    9607,
    9633,
    9659,
    9685,
    9711,
    9737,
    9763,
    10231,
    10257,
    10283,
    10309,
    10335,
    10361,
    10387,
    10413,
    10439,
    10907,
    10933,
    10959,
    10985,
    11011,
    11037,
    11063,
    11089,
    11115,
    11583,
    11609,
    11635,
    11661,
    11687,
    11713,
    11739,
    11765,
    11791,
    12259,
    12285,
    12311,
    12337,
    12363,
    12389,
    12415,
    12441,
    12467,
    38,
    64,
    90,
    116,
    142,
    168,
    194,
    220,
    246,
    272,
    298,
    324,
    350,
    376,
    402,
    428,
    454,
    480,
    506,
    532,
    558,
    584,
    610,
    636,
    662,
    6850,
    6876,
    6902,
    6928,
    6954,
    6980,
    7006,
    7032,
    7058,
    7526,
    7552,
    7578,
    7604,
    7630,
    7656,
    7682,
    7708,
    7734,
    8202,
    8228,
    8254,
    8280,
    8306,
    8332,
    8358,
    8384,
    8410,
    8878,
    8904,
    8930,
    8956,
    8982,
    9008,
    9034,
    9060,
    9086,
    9554,
    9580,
    9606,
    9632,
    9658,
    9684,
    9710,
    9736,
    9762,
    10230,
    10256,
    10282,
    10308,
    10334,
    10360,
    10386,
    10412,
    10438,
    10906,
    10932,
    10958,
    10984,
    11010,
    11036,
    11062,
    11088,
    11114,
    11582,
    11608,
    11634,
    11660,
    11686,
    11712,
    11738,
    11764,
    11790,
    12258,
    12284,
    12310,
    12336,
    12362,
    12388,
    12414,
    12440,
    12466,
    37,
    63,
    89,
    115,
    141,
    167,
    193,
    219,
    245,
    271,
    297,
    323,
    349,
    375,
    401,
    427,
    453,
    479,
    505,
    531,
    557,
    583,
    609,
    635,
    661,
    6849,
    6875,
    6901,
    6927,
    6953,
    6979,
    7005,
    7031,
    7057,
    7525,
    7551,
    7577,
    7603,
    7629,
    7655,
    7681,
    7707,
    7733,
    8201,
    8227,
    8253,
    8279,
    8305,
    8331,
    8357,
    8383,
    8409,
    8877,
    8903,
    8929,
    8955,
    8981,
    9007,
    9033,
    9059,
    9085,
    9553,
    9579,
    9605,
    9631,
    9657,
    9683,
    9709,
    9735,
    9761,
    10229,
    10255,
    10281,
    10307,
    10333,
    10359,
    10385,
    10411,
    10437,
    10905,
    10931,
    10957,
    10983,
    11009,
    11035,
    11061,
    11087,
    11113,
    11581,
    11607,
    11633,
    11659,
    11685,
    11711,
    11737,
    11763,
    11789,
    12257,
    12283,
    12309,
    12335,
    12361,
    12387,
    12413,
    12439,
    12465,
    36,
    62,
    88,
    114,
    140,
    166,
    192,
    218,
    244,
    270,
    296,
    322,
    348,
    374,
    400,
    426,
    452,
    478,
    504,
    530,
    556,
    582,
    608,
    634,
    660,
    6848,
    6874,
    6900,
    6926,
    6952,
    6978,
    7004,
    7030,
    7056,
    7524,
    7550,
    7576,
    7602,
    7628,
    7654,
    7680,
    7706,
    7732,
    8200,
    8226,
    8252,
    8278,
    8304,
    8330,
    8356,
    8382,
    8408,
    8876,
    8902,
    8928,
    8954,
    8980,
    9006,
    9032,
    9058,
    9084,
    9552,
    9578,
    9604,
    9630,
    9656,
    9682,
    9708,
    9734,
    9760,
    10228,
    10254,
    10280,
    10306,
    10332,
    10358,
    10384,
    10410,
    10436,
    10904,
    10930,
    10956,
    10982,
    11008,
    11034,
    11060,
    11086,
    11112,
    11580,
    11606,
    11632,
    11658,
    11684,
    11710,
    11736,
    11762,
    11788,
    12256,
    12282,
    12308,
    12334,
    12360,
    12386,
    12412,
    12438,
    12464,
    35,
    61,
    87,
    113,
    139,
    165,
    191,
    217,
    243,
    269,
    295,
    321,
    347,
    373,
    399,
    425,
    451,
    477,
    503,
    529,
    555,
    581,
    607,
    633,
    659,
    6847,
    6873,
    6899,
    6925,
    6951,
    6977,
    7003,
    7029,
    7055,
    7523,
    7549,
    7575,
    7601,
    7627,
    7653,
    7679,
    7705,
    7731,
    8199,
    8225,
    8251,
    8277,
    8303,
    8329,
    8355,
    8381,
    8407,
    8875,
    8901,
    8927,
    8953,
    8979,
    9005,
    9031,
    9057,
    9083,
    9551,
    9577,
    9603,
    9629,
    9655,
    9681,
    9707,
    9733,
    9759,
    10227,
    10253,
    10279,
    10305,
    10331,
    10357,
    10383,
    10409,
    10435,
    10903,
    10929,
    10955,
    10981,
    11007,
    11033,
    11059,
    11085,
    11111,
    11579,
    11605,
    11631,
    11657,
    11683,
    11709,
    11735,
    11761,
    11787,
    12255,
    12281,
    12307,
    12333,
    12359,
    12385,
    12411,
    12437,
    12463,
    34,
    60,
    86,
    112,
    138,
    164,
    190,
    216,
    242,
    268,
    294,
    320,
    346,
    372,
    398,
    424,
    450,
    476,
    502,
    528,
    554,
    580,
    606,
    632,
    658,
    6846,
    6872,
    6898,
    6924,
    6950,
    6976,
    7002,
    7028,
    7054,
    7522,
    7548,
    7574,
    7600,
    7626,
    7652,
    7678,
    7704,
    7730,
    8198,
    8224,
    8250,
    8276,
    8302,
    8328,
    8354,
    8380,
    8406,
    8874,
    8900,
    8926,
    8952,
    8978,
    9004,
    9030,
    9056,
    9082,
    9550,
    9576,
    9602,
    9628,
    9654,
    9680,
    9706,
    9732,
    9758,
    10226,
    10252,
    10278,
    10304,
    10330,
    10356,
    10382,
    10408,
    10434,
    10902,
    10928,
    10954,
    10980,
    11006,
    11032,
    11058,
    11084,
    11110,
    11578,
    11604,
    11630,
    11656,
    11682,
    11708,
    11734,
    11760,
    11786,
    12254,
    12280,
    12306,
    12332,
    12358,
    12384,
    12410,
    12436,
    12462,
    33,
    59,
    85,
    111,
    137,
    163,
    189,
    215,
    241,
    267,
    293,
    319,
    345,
    371,
    397,
    423,
    449,
    475,
    501,
    527,
    553,
    579,
    605,
    631,
    657,
    6845,
    6871,
    6897,
    6923,
    6949,
    6975,
    7001,
    7027,
    7053,
    7521,
    7547,
    7573,
    7599,
    7625,
    7651,
    7677,
    7703,
    7729,
    8197,
    8223,
    8249,
    8275,
    8301,
    8327,
    8353,
    8379,
    8405,
    8873,
    8899,
    8925,
    8951,
    8977,
    9003,
    9029,
    9055,
    9081,
    9549,
    9575,
    9601,
    9627,
    9653,
    9679,
    9705,
    9731,
    9757,
    10225,
    10251,
    10277,
    10303,
    10329,
    10355,
    10381,
    10407,
    10433,
    10901,
    10927,
    10953,
    10979,
    11005,
    11031,
    11057,
    11083,
    11109,
    11577,
    11603,
    11629,
    11655,
    11681,
    11707,
    11733,
    11759,
    11785,
    12253,
    12279,
    12305,
    12331,
    12357,
    12383,
    12409,
    12435,
    12461
)
val res4 = setOf(
    0,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    11,
    12,
    13,
    14,
    15,
    16,
    17,
    18,
    19,
    20,
    21,
    22,
    23,
    24,
    25,
    263,
    264,
    265,
    266,
    267,
    268,
    269,
    270,
    271,
    289,
    290,
    291,
    292,
    293,
    294,
    295,
    296,
    297,
    315,
    316,
    317,
    318,
    319,
    320,
    321,
    322,
    323,
    341,
    342,
    343,
    344,
    345,
    346,
    347,
    348,
    349,
    367,
    368,
    369,
    370,
    371,
    372,
    373,
    374,
    375,
    393,
    394,
    395,
    396,
    397,
    398,
    399,
    400,
    401,
    419,
    420,
    421,
    422,
    423,
    424,
    425,
    426,
    427,
    445,
    446,
    447,
    448,
    449,
    450,
    451,
    452,
    453,
    471,
    472,
    473,
    474,
    475,
    476,
    477,
    478,
    479,
    33,
    34,
    35,
    36,
    37,
    38,
    39,
    40,
    41,
    59,
    60,
    61,
    62,
    63,
    64,
    65,
    66,
    67,
    85,
    86,
    87,
    88,
    89,
    90,
    91,
    92,
    93,
    111,
    112,
    113,
    114,
    115,
    116,
    117,
    118,
    119,
    137,
    138,
    139,
    140,
    141,
    142,
    143,
    144,
    145,
    163,
    164,
    165,
    166,
    167,
    168,
    169,
    170,
    171,
    189,
    190,
    191,
    192,
    193,
    194,
    195,
    196,
    197,
    215,
    216,
    217,
    218,
    219,
    220,
    221,
    222,
    223,
    241,
    242,
    243,
    244,
    245,
    246,
    247,
    248,
    249,
    272,
    273,
    274,
    275,
    298,
    299,
    300,
    301,
    324,
    325,
    326,
    327,
    350,
    351,
    352,
    353,
    376,
    377,
    378,
    379,
    402,
    403,
    404,
    405,
    428,
    429,
    430,
    431,
    454,
    455,
    456,
    457,
    480,
    481,
    482,
    483,
    501,
    502,
    503,
    504,
    505,
    506,
    507,
    508,
    509,
    527,
    528,
    529,
    530,
    531,
    532,
    533,
    534,
    535,
    553,
    554,
    555,
    556,
    557,
    558,
    559,
    560,
    561,
    579,
    580,
    581,
    582,
    583,
    584,
    585,
    586,
    587,
    605,
    606,
    607,
    608,
    609,
    610,
    611,
    612,
    613,
    631,
    632,
    633,
    634,
    635,
    636,
    637,
    638,
    639,
    657,
    658,
    659,
    660,
    661,
    662,
    663,
    664,
    665,
    6845,
    6846,
    6847,
    6848,
    6849,
    6850,
    6851,
    6852,
    6853,
    6871,
    6872,
    6873,
    6874,
    6875,
    6876,
    6877,
    6878,
    6879,
    6897,
    6898,
    6899,
    6900,
    6901,
    6902,
    6903,
    6904,
    6905,
    6923,
    6924,
    6925,
    6926,
    6927,
    6928,
    6929,
    6930,
    6931,
    6949,
    6950,
    6951,
    6952,
    6953,
    6954,
    6955,
    6956,
    6957,
    6975,
    6976,
    6977,
    6978,
    6979,
    6980,
    6981,
    6982,
    6983,
    7001,
    7002,
    7003,
    7004,
    7005,
    7006,
    7007,
    7008,
    7009,
    7027,
    7028,
    7029,
    7030,
    7031,
    7032,
    7033,
    7034,
    7035,
    7053,
    7054,
    7055,
    7056,
    7057,
    7058,
    7059,
    7060,
    7061,
    7521,
    7522,
    7523,
    7524,
    7525,
    7526,
    7527,
    7528,
    7529,
    7547,
    7548,
    7549,
    7550,
    7551,
    7552,
    7553,
    7554,
    7555,
    7573,
    7574,
    7575,
    7576,
    7577,
    7578,
    7579,
    7580,
    7581,
    7599,
    7600,
    7601,
    7602,
    7603,
    7604,
    7605,
    7606,
    7607,
    7625,
    7626,
    7627,
    7628,
    7629,
    7630,
    7631,
    7632,
    7633,
    7651,
    7652,
    7653,
    7654,
    7655,
    7656,
    7657,
    7658,
    7659,
    7677,
    7678,
    7679,
    7680,
    7681,
    7682,
    7683,
    7684,
    7685,
    7703,
    7704,
    7705,
    7706,
    7707,
    7708,
    7709,
    7710,
    7711,
    7729,
    7730,
    7731,
    7732,
    7733,
    7734,
    7735,
    7736,
    7737,
    8197,
    8198,
    8199,
    8200,
    8201,
    8202,
    8203,
    8204,
    8205,
    8223,
    8224,
    8225,
    8226,
    8227,
    8228,
    8229,
    8230,
    8231,
    8249,
    8250,
    8251,
    8252,
    8253,
    8254,
    8255,
    8256,
    8257,
    8275,
    8276,
    8277,
    8278,
    8279,
    8280,
    8281,
    8282,
    8283,
    8301,
    8302,
    8303,
    8304,
    8305,
    8306,
    8307,
    8308,
    8309,
    8327,
    8328,
    8329,
    8330,
    8331,
    8332,
    8333,
    8334,
    8335,
    8353,
    8354,
    8355,
    8356,
    8357,
    8358,
    8359,
    8360,
    8361,
    8379,
    8380,
    8381,
    8382,
    8383,
    8384,
    8385,
    8386,
    8387,
    8405,
    8406,
    8407,
    8408,
    8409,
    8410,
    8411,
    8412,
    8413,
    8873,
    8874,
    8875,
    8876,
    8877,
    8878,
    8879,
    8880,
    8881,
    8899,
    8900,
    8901,
    8902,
    8903,
    8904,
    8905,
    8906,
    8907,
    8925,
    8926,
    8927,
    8928,
    8929,
    8930,
    8931,
    8932,
    8933,
    8951,
    8952,
    8953,
    8954,
    8955,
    8956,
    8957,
    8958,
    8959,
    8977,
    8978,
    8979,
    8980,
    8981,
    8982,
    8983,
    8984,
    8985,
    9003,
    9004,
    9005,
    9006,
    9007,
    9008,
    9009,
    9010,
    9011,
    9029,
    9030,
    9031,
    9032,
    9033,
    9034,
    9035,
    9036,
    9037,
    9055,
    9056,
    9057,
    9058,
    9059,
    9060,
    9061,
    9062,
    9063,
    9081,
    9082,
    9083,
    9084,
    9085,
    9086,
    9087,
    9088,
    9089,
    9549,
    9550,
    9551,
    9552,
    9553,
    9554,
    9555,
    9556,
    9557,
    9575,
    9576,
    9577,
    9578,
    9579,
    9580,
    9581,
    9582,
    9583,
    9601,
    9602,
    9603,
    9604,
    9605,
    9606,
    9607,
    9608,
    9609,
    9627,
    9628,
    9629,
    9630,
    9631,
    9632,
    9633,
    9634,
    9635,
    9653,
    9654,
    9655,
    9656,
    9657,
    9658,
    9659,
    9660,
    9661,
    9679,
    9680,
    9681,
    9682,
    9683,
    9684,
    9685,
    9686,
    9687,
    9705,
    9706,
    9707,
    9708,
    9709,
    9710,
    9711,
    9712,
    9713,
    9731,
    9732,
    9733,
    9734,
    9735,
    9736,
    9737,
    9738,
    9739,
    9757,
    9758,
    9759,
    9760,
    9761,
    9762,
    9763,
    9764,
    9765,
    10225,
    10226,
    10227,
    10228,
    10229,
    10230,
    10231,
    10232,
    10233,
    10251,
    10252,
    10253,
    10254,
    10255,
    10256,
    10257,
    10258,
    10259,
    10277,
    10278,
    10279,
    10280,
    10281,
    10282,
    10283,
    10284,
    10285,
    10303,
    10304,
    10305,
    10306,
    10307,
    10308,
    10309,
    10310,
    10311,
    10329,
    10330,
    10331,
    10332,
    10333,
    10334,
    10335,
    10336,
    10337,
    10355,
    10356,
    10357,
    10358,
    10359,
    10360,
    10361,
    10362,
    10363,
    10381,
    10382,
    10383,
    10384,
    10385,
    10386,
    10387,
    10388,
    10389,
    10407,
    10408,
    10409,
    10410,
    10411,
    10412,
    10413,
    10414,
    10415,
    10433,
    10434,
    10435,
    10436,
    10437,
    10438,
    10439,
    10440,
    10441,
    10901,
    10902,
    10903,
    10904,
    10905,
    10906,
    10907,
    10908,
    10909,
    10927,
    10928,
    10929,
    10930,
    10931,
    10932,
    10933,
    10934,
    10935,
    10953,
    10954,
    10955,
    10956,
    10957,
    10958,
    10959,
    10960,
    10961,
    10979,
    10980,
    10981,
    10982,
    10983,
    10984,
    10985,
    10986,
    10987,
    11005,
    11006,
    11007,
    11008,
    11009,
    11010,
    11011,
    11012,
    11013,
    11031,
    11032,
    11033,
    11034,
    11035,
    11036,
    11037,
    11038,
    11039,
    11057,
    11058,
    11059,
    11060,
    11061,
    11062,
    11063,
    11064,
    11065,
    11083,
    11084,
    11085,
    11086,
    11087,
    11088,
    11089,
    11090,
    11091,
    11109,
    11110,
    11111,
    11112,
    11113,
    11114,
    11115,
    11116,
    11117,
    11577,
    11578,
    11579,
    11580,
    11581,
    11582,
    11583,
    11584,
    11585,
    11603,
    11604,
    11605,
    11606,
    11607,
    11608,
    11609,
    11610,
    11611,
    11629,
    11630,
    11631,
    11632,
    11633,
    11634,
    11635,
    11636,
    11637,
    11655,
    11656,
    11657,
    11658,
    11659,
    11660,
    11661,
    11662,
    11663,
    11681,
    11682,
    11683,
    11684,
    11685,
    11686,
    11687,
    11688,
    11689,
    11707,
    11708,
    11709,
    11710,
    11711,
    11712,
    11713,
    11714,
    11715,
    11733,
    11734,
    11735,
    11736,
    11737,
    11738,
    11739,
    11740,
    11741,
    11759,
    11760,
    11761,
    11762,
    11763,
    11764,
    11765,
    11766,
    11767,
    11785,
    11786,
    11787,
    11788,
    11789,
    11790,
    11791,
    11792,
    11793,
    12253,
    12254,
    12255,
    12256,
    12257,
    12258,
    12259,
    12260,
    12261,
    12279,
    12280,
    12281,
    12282,
    12283,
    12284,
    12285,
    12286,
    12287,
    12305,
    12306,
    12307,
    12308,
    12309,
    12310,
    12311,
    12312,
    12313,
    12331,
    12332,
    12333,
    12334,
    12335,
    12336,
    12337,
    12338,
    12339,
    12357,
    12358,
    12359,
    12360,
    12361,
    12362,
    12363,
    12364,
    12365,
    12383,
    12384,
    12385,
    12386,
    12387,
    12388,
    12389,
    12390,
    12391,
    12409,
    12410,
    12411,
    12412,
    12413,
    12414,
    12415,
    12416,
    12417,
    12435,
    12436,
    12437,
    12438,
    12439,
    12440,
    12441,
    12442,
    12443,
    12461,
    12462,
    12463,
    12464,
    12465,
    12466,
    12467,
    12468,
    12469
)
val res5 = setOf(
    0,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    11,
    12,
    13,
    14,
    15,
    16,
    17,
    18,
    19,
    20,
    21,
    22,
    23,
    24,
    25,
    263,
    264,
    265,
    266,
    267,
    268,
    269,
    270,
    271,
    289,
    290,
    291,
    292,
    293,
    294,
    295,
    296,
    297,
    315,
    316,
    317,
    318,
    319,
    320,
    321,
    322,
    323,
    341,
    342,
    343,
    344,
    345,
    346,
    347,
    348,
    349,
    367,
    368,
    369,
    370,
    371,
    372,
    373,
    374,
    375,
    393,
    394,
    395,
    396,
    397,
    398,
    399,
    400,
    401,
    419,
    420,
    421,
    422,
    423,
    424,
    425,
    426,
    427,
    445,
    446,
    447,
    448,
    449,
    450,
    451,
    452,
    453,
    471,
    472,
    473,
    474,
    475,
    476,
    477,
    478,
    479
)
val res6 = setOf(0, 10, 11, 12, 13, 14, 15, 16, 17, 18)
val res7 = setOf(
    23,
    283,
    309,
    335,
    361,
    387,
    413,
    439,
    465,
    491,
    0,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    11,
    12,
    13,
    14,
    15,
    16,
    17,
    18,
    19,
    20,
    21,
    22,
    24,
    25,
    282,
    308,
    334,
    360,
    386,
    412,
    438,
    464,
    490,
    281,
    307,
    333,
    359,
    385,
    411,
    437,
    463,
    489,
    280,
    306,
    332,
    358,
    384,
    410,
    436,
    462,
    488,
    279,
    305,
    331,
    357,
    383,
    409,
    435,
    461,
    487,
    278,
    304,
    330,
    356,
    382,
    408,
    434,
    460,
    486,
    277,
    303,
    329,
    355,
    381,
    407,
    433,
    459,
    485,
    276,
    302,
    328,
    354,
    380,
    406,
    432,
    458,
    484,
    275,
    301,
    327,
    353,
    379,
    405,
    431,
    457,
    483
)
val res8 = setOf(
    0,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    11,
    12,
    13,
    14,
    15,
    16,
    17,
    18,
    19,
    20,
    21,
    22,
    23,
    24,
    25,
    38,
    64,
    90,
    116,
    142,
    168,
    194,
    220,
    246,
    272,
    298,
    324,
    350,
    376,
    402,
    428,
    454,
    480,
    506,
    532,
    558,
    584,
    610,
    636,
    662,
    7162,
    7188,
    7214,
    7240,
    7266,
    7292,
    7318,
    7344,
    7370,
    7838,
    7864,
    7890,
    7916,
    7942,
    7968,
    7994,
    8020,
    8046,
    8514,
    8540,
    8566,
    8592,
    8618,
    8644,
    8670,
    8696,
    8722,
    9190,
    9216,
    9242,
    9268,
    9294,
    9320,
    9346,
    9372,
    9398,
    9866,
    9892,
    9918,
    9944,
    9970,
    9996,
    10022,
    10048,
    10074,
    10542,
    10568,
    10594,
    10620,
    10646,
    10672,
    10698,
    10724,
    10750,
    11218,
    11244,
    11270,
    11296,
    11322,
    11348,
    11374,
    11400,
    11426,
    11894,
    11920,
    11946,
    11972,
    11998,
    12024,
    12050,
    12076,
    12102,
    12570,
    12596,
    12622,
    12648,
    12674,
    12700,
    12726,
    12752,
    12778,
    37,
    63,
    89,
    115,
    141,
    167,
    193,
    219,
    245,
    271,
    297,
    323,
    349,
    375,
    401,
    427,
    453,
    479,
    505,
    531,
    557,
    583,
    609,
    635,
    661,
    7161,
    7187,
    7213,
    7239,
    7265,
    7291,
    7317,
    7343,
    7369,
    7837,
    7863,
    7889,
    7915,
    7941,
    7967,
    7993,
    8019,
    8045,
    8513,
    8539,
    8565,
    8591,
    8617,
    8643,
    8669,
    8695,
    8721,
    9189,
    9215,
    9241,
    9267,
    9293,
    9319,
    9345,
    9371,
    9397,
    9865,
    9891,
    9917,
    9943,
    9969,
    9995,
    10021,
    10047,
    10073,
    10541,
    10567,
    10593,
    10619,
    10645,
    10671,
    10697,
    10723,
    10749,
    11217,
    11243,
    11269,
    11295,
    11321,
    11347,
    11373,
    11399,
    11425,
    11893,
    11919,
    11945,
    11971,
    11997,
    12023,
    12049,
    12075,
    12101,
    12569,
    12595,
    12621,
    12647,
    12673,
    12699,
    12725,
    12751,
    12777,
    36,
    62,
    88,
    114,
    140,
    166,
    192,
    218,
    244,
    270,
    296,
    322,
    348,
    374,
    400,
    426,
    452,
    478,
    504,
    530,
    556,
    582,
    608,
    634,
    660,
    7160,
    7186,
    7212,
    7238,
    7264,
    7290,
    7316,
    7342,
    7368,
    7836,
    7862,
    7888,
    7914,
    7940,
    7966,
    7992,
    8018,
    8044,
    8512,
    8538,
    8564,
    8590,
    8616,
    8642,
    8668,
    8694,
    8720,
    9188,
    9214,
    9240,
    9266,
    9292,
    9318,
    9344,
    9370,
    9396,
    9864,
    9890,
    9916,
    9942,
    9968,
    9994,
    10020,
    10046,
    10072,
    10540,
    10566,
    10592,
    10618,
    10644,
    10670,
    10696,
    10722,
    10748,
    11216,
    11242,
    11268,
    11294,
    11320,
    11346,
    11372,
    11398,
    11424,
    11892,
    11918,
    11944,
    11970,
    11996,
    12022,
    12048,
    12074,
    12100,
    12568,
    12594,
    12620,
    12646,
    12672,
    12698,
    12724,
    12750,
    12776,
    35,
    61,
    87,
    113,
    139,
    165,
    191,
    217,
    243,
    269,
    295,
    321,
    347,
    373,
    399,
    425,
    451,
    477,
    503,
    529,
    555,
    581,
    607,
    633,
    659,
    7159,
    7185,
    7211,
    7237,
    7263,
    7289,
    7315,
    7341,
    7367,
    7835,
    7861,
    7887,
    7913,
    7939,
    7965,
    7991,
    8017,
    8043,
    8511,
    8537,
    8563,
    8589,
    8615,
    8641,
    8667,
    8693,
    8719,
    9187,
    9213,
    9239,
    9265,
    9291,
    9317,
    9343,
    9369,
    9395,
    9863,
    9889,
    9915,
    9941,
    9967,
    9993,
    10019,
    10045,
    10071,
    10539,
    10565,
    10591,
    10617,
    10643,
    10669,
    10695,
    10721,
    10747,
    11215,
    11241,
    11267,
    11293,
    11319,
    11345,
    11371,
    11397,
    11423,
    11891,
    11917,
    11943,
    11969,
    11995,
    12021,
    12047,
    12073,
    12099,
    12567,
    12593,
    12619,
    12645,
    12671,
    12697,
    12723,
    12749,
    12775,
    34,
    60,
    86,
    112,
    138,
    164,
    190,
    216,
    242,
    268,
    294,
    320,
    346,
    372,
    398,
    424,
    450,
    476,
    502,
    528,
    554,
    580,
    606,
    632,
    658,
    7158,
    7184,
    7210,
    7236,
    7262,
    7288,
    7314,
    7340,
    7366,
    7834,
    7860,
    7886,
    7912,
    7938,
    7964,
    7990,
    8016,
    8042,
    8510,
    8536,
    8562,
    8588,
    8614,
    8640,
    8666,
    8692,
    8718,
    9186,
    9212,
    9238,
    9264,
    9290,
    9316,
    9342,
    9368,
    9394,
    9862,
    9888,
    9914,
    9940,
    9966,
    9992,
    10018,
    10044,
    10070,
    10538,
    10564,
    10590,
    10616,
    10642,
    10668,
    10694,
    10720,
    10746,
    11214,
    11240,
    11266,
    11292,
    11318,
    11344,
    11370,
    11396,
    11422,
    11890,
    11916,
    11942,
    11968,
    11994,
    12020,
    12046,
    12072,
    12098,
    12566,
    12592,
    12618,
    12644,
    12670,
    12696,
    12722,
    12748,
    12774,
    33,
    59,
    85,
    111,
    137,
    163,
    189,
    215,
    241,
    267,
    293,
    319,
    345,
    371,
    397,
    423,
    449,
    475,
    501,
    527,
    553,
    579,
    605,
    631,
    657,
    7157,
    7183,
    7209,
    7235,
    7261,
    7287,
    7313,
    7339,
    7365,
    7833,
    7859,
    7885,
    7911,
    7937,
    7963,
    7989,
    8015,
    8041,
    8509,
    8535,
    8561,
    8587,
    8613,
    8639,
    8665,
    8691,
    8717,
    9185,
    9211,
    9237,
    9263,
    9289,
    9315,
    9341,
    9367,
    9393,
    9861,
    9887,
    9913,
    9939,
    9965,
    9991,
    10017,
    10043,
    10069,
    10537,
    10563,
    10589,
    10615,
    10641,
    10667,
    10693,
    10719,
    10745,
    11213,
    11239,
    11265,
    11291,
    11317,
    11343,
    11369,
    11395,
    11421,
    11889,
    11915,
    11941,
    11967,
    11993,
    12019,
    12045,
    12071,
    12097,
    12565,
    12591,
    12617,
    12643,
    12669,
    12695,
    12721,
    12747,
    12773,
    32,
    58,
    84,
    110,
    136,
    162,
    188,
    214,
    240,
    266,
    292,
    318,
    344,
    370,
    396,
    422,
    448,
    474,
    500,
    526,
    552,
    578,
    604,
    630,
    656,
    7156,
    7182,
    7208,
    7234,
    7260,
    7286,
    7312,
    7338,
    7364,
    7832,
    7858,
    7884,
    7910,
    7936,
    7962,
    7988,
    8014,
    8040,
    8508,
    8534,
    8560,
    8586,
    8612,
    8638,
    8664,
    8690,
    8716,
    9184,
    9210,
    9236,
    9262,
    9288,
    9314,
    9340,
    9366,
    9392,
    9860,
    9886,
    9912,
    9938,
    9964,
    9990,
    10016,
    10042,
    10068,
    10536,
    10562,
    10588,
    10614,
    10640,
    10666,
    10692,
    10718,
    10744,
    11212,
    11238,
    11264,
    11290,
    11316,
    11342,
    11368,
    11394,
    11420,
    11888,
    11914,
    11940,
    11966,
    11992,
    12018,
    12044,
    12070,
    12096,
    12564,
    12590,
    12616,
    12642,
    12668,
    12694,
    12720,
    12746,
    12772,
    31,
    57,
    83,
    109,
    135,
    161,
    187,
    213,
    239,
    265,
    291,
    317,
    343,
    369,
    395,
    421,
    447,
    473,
    499,
    525,
    551,
    577,
    603,
    629,
    655,
    7155,
    7181,
    7207,
    7233,
    7259,
    7285,
    7311,
    7337,
    7363,
    7831,
    7857,
    7883,
    7909,
    7935,
    7961,
    7987,
    8013,
    8039,
    8507,
    8533,
    8559,
    8585,
    8611,
    8637,
    8663,
    8689,
    8715,
    9183,
    9209,
    9235,
    9261,
    9287,
    9313,
    9339,
    9365,
    9391,
    9859,
    9885,
    9911,
    9937,
    9963,
    9989,
    10015,
    10041,
    10067,
    10535,
    10561,
    10587,
    10613,
    10639,
    10665,
    10691,
    10717,
    10743,
    11211,
    11237,
    11263,
    11289,
    11315,
    11341,
    11367,
    11393,
    11419,
    11887,
    11913,
    11939,
    11965,
    11991,
    12017,
    12043,
    12069,
    12095,
    12563,
    12589,
    12615,
    12641,
    12667,
    12693,
    12719,
    12745,
    12771,
    30,
    56,
    82,
    108,
    134,
    160,
    186,
    212,
    238,
    264,
    290,
    316,
    342,
    368,
    394,
    420,
    446,
    472,
    498,
    524,
    550,
    576,
    602,
    628,
    654,
    7154,
    7180,
    7206,
    7232,
    7258,
    7284,
    7310,
    7336,
    7362,
    7830,
    7856,
    7882,
    7908,
    7934,
    7960,
    7986,
    8012,
    8038,
    8506,
    8532,
    8558,
    8584,
    8610,
    8636,
    8662,
    8688,
    8714,
    9182,
    9208,
    9234,
    9260,
    9286,
    9312,
    9338,
    9364,
    9390,
    9858,
    9884,
    9910,
    9936,
    9962,
    9988,
    10014,
    10040,
    10066,
    10534,
    10560,
    10586,
    10612,
    10638,
    10664,
    10690,
    10716,
    10742,
    11210,
    11236,
    11262,
    11288,
    11314,
    11340,
    11366,
    11392,
    11418,
    11886,
    11912,
    11938,
    11964,
    11990,
    12016,
    12042,
    12068,
    12094,
    12562,
    12588,
    12614,
    12640,
    12666,
    12692,
    12718,
    12744,
    12770
)
val res9 = setOf(
    0,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    11,
    12,
    13,
    14,
    15,
    16,
    17,
    18,
    19,
    20,
    21,
    22,
    23,
    24,
    25,
    275,
    276,
    277,
    278,
    279,
    280,
    281,
    282,
    283,
    301,
    302,
    303,
    304,
    305,
    306,
    307,
    308,
    309,
    327,
    328,
    329,
    330,
    331,
    332,
    333,
    334,
    335,
    353,
    354,
    355,
    356,
    357,
    358,
    359,
    360,
    361,
    379,
    380,
    381,
    382,
    383,
    384,
    385,
    386,
    387,
    405,
    406,
    407,
    408,
    409,
    410,
    411,
    412,
    413,
    431,
    432,
    433,
    434,
    435,
    436,
    437,
    438,
    439,
    457,
    458,
    459,
    460,
    461,
    462,
    463,
    464,
    465,
    483,
    484,
    485,
    486,
    487,
    488,
    489,
    490,
    491
)
val res10 = setOf(
    0,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    11,
    12,
    13,
    14,
    15,
    16,
    17,
    18,
    19,
    20,
    21,
    22,
    23,
    24,
    25,
    45,
    71,
    97,
    123,
    149,
    175,
    201,
    227,
    253,
    260,
    261,
    262,
    263,
    264,
    265,
    266,
    267,
    268,
    269,
    270,
    271,
    272,
    273,
    274,
    275,
    276,
    277,
    278,
    279,
    280,
    281,
    282,
    283,
    284,
    285,
    286,
    287,
    288,
    289,
    290,
    291,
    292,
    293,
    294,
    295,
    296,
    297,
    298,
    299,
    300,
    301,
    302,
    303,
    304,
    305,
    306,
    307,
    308,
    309,
    310,
    311,
    312,
    313,
    314,
    315,
    316,
    317,
    318,
    319,
    320,
    321,
    322,
    323,
    324,
    325,
    326,
    327,
    328,
    329,
    330,
    331,
    332,
    333,
    334,
    335,
    336,
    337,
    338,
    339,
    340,
    341,
    342,
    343,
    344,
    345,
    346,
    347,
    348,
    349,
    350,
    351,
    352,
    353,
    354,
    355,
    356,
    357,
    358,
    359,
    360,
    361,
    362,
    363,
    364,
    365,
    366,
    367,
    368,
    369,
    370,
    371,
    372,
    373,
    374,
    375,
    376,
    377,
    378,
    379,
    380,
    381,
    382,
    383,
    384,
    385,
    386,
    387,
    388,
    389,
    390,
    391,
    392,
    393,
    394,
    395,
    396,
    397,
    398,
    399,
    400,
    401,
    402,
    403,
    404,
    405,
    406,
    407,
    408,
    409,
    410,
    411,
    412,
    413,
    414,
    415,
    416,
    417,
    418,
    419,
    420,
    421,
    422,
    423,
    424,
    425,
    426,
    427,
    428,
    429,
    430,
    431,
    432,
    433,
    434,
    435,
    436,
    437,
    438,
    439,
    440,
    441,
    442,
    443,
    444,
    445,
    446,
    447,
    448,
    449,
    450,
    451,
    452,
    453,
    454,
    455,
    456,
    457,
    458,
    459,
    460,
    461,
    462,
    463,
    464,
    465,
    466,
    467,
    468,
    469,
    470,
    471,
    472,
    473,
    474,
    475,
    476,
    477,
    478,
    479,
    480,
    481,
    482,
    483,
    484,
    485,
    486,
    487,
    488,
    489,
    490,
    491,
    492,
    493,
    513,
    539,
    565,
    591,
    617,
    643,
    669,
    7169,
    7195,
    7221,
    7247,
    7273,
    7299,
    7325,
    7351,
    7377,
    7845,
    7871,
    7897,
    7923,
    7949,
    7975,
    8001,
    8027,
    8053,
    8521,
    8547,
    8573,
    8599,
    8625,
    8651,
    8677,
    8703,
    8729,
    9197,
    9223,
    9249,
    9275,
    9301,
    9327,
    9353,
    9379,
    9405,
    9873,
    9899,
    9925,
    9951,
    9977,
    10003,
    10029,
    10055,
    10081,
    10549,
    10575,
    10601,
    10627,
    10653,
    10679,
    10705,
    10731,
    10757,
    11225,
    11251,
    11277,
    11303,
    11329,
    11355,
    11381,
    11407,
    11433,
    11901,
    11927,
    11953,
    11979,
    12005,
    12031,
    12057,
    12083,
    12109,
    12577,
    12603,
    12629,
    12655,
    12681,
    12707,
    12733,
    12759,
    12785,
    44,
    70,
    96,
    122,
    148,
    174,
    200,
    226,
    252,
    512,
    538,
    564,
    590,
    616,
    642,
    668,
    7168,
    7194,
    7220,
    7246,
    7272,
    7298,
    7324,
    7350,
    7376,
    7844,
    7870,
    7896,
    7922,
    7948,
    7974,
    8000,
    8026,
    8052,
    8520,
    8546,
    8572,
    8598,
    8624,
    8650,
    8676,
    8702,
    8728,
    9196,
    9222,
    9248,
    9274,
    9300,
    9326,
    9352,
    9378,
    9404,
    9872,
    9898,
    9924,
    9950,
    9976,
    10002,
    10028,
    10054,
    10080,
    10548,
    10574,
    10600,
    10626,
    10652,
    10678,
    10704,
    10730,
    10756,
    11224,
    11250,
    11276,
    11302,
    11328,
    11354,
    11380,
    11406,
    11432,
    11900,
    11926,
    11952,
    11978,
    12004,
    12030,
    12056,
    12082,
    12108,
    12576,
    12602,
    12628,
    12654,
    12680,
    12706,
    12732,
    12758,
    12784,
    43,
    69,
    95,
    121,
    147,
    173,
    199,
    225,
    251,
    511,
    537,
    563,
    589,
    615,
    641,
    667,
    7167,
    7193,
    7219,
    7245,
    7271,
    7297,
    7323,
    7349,
    7375,
    7843,
    7869,
    7895,
    7921,
    7947,
    7973,
    7999,
    8025,
    8051,
    8519,
    8545,
    8571,
    8597,
    8623,
    8649,
    8675,
    8701,
    8727,
    9195,
    9221,
    9247,
    9273,
    9299,
    9325,
    9351,
    9377,
    9403,
    9871,
    9897,
    9923,
    9949,
    9975,
    10001,
    10027,
    10053,
    10079,
    10547,
    10573,
    10599,
    10625,
    10651,
    10677,
    10703,
    10729,
    10755,
    11223,
    11249,
    11275,
    11301,
    11327,
    11353,
    11379,
    11405,
    11431,
    11899,
    11925,
    11951,
    11977,
    12003,
    12029,
    12055,
    12081,
    12107,
    12575,
    12601,
    12627,
    12653,
    12679,
    12705,
    12731,
    12757,
    12783,
    42,
    68,
    94,
    120,
    146,
    172,
    198,
    224,
    250,
    510,
    536,
    562,
    588,
    614,
    640,
    666,
    7166,
    7192,
    7218,
    7244,
    7270,
    7296,
    7322,
    7348,
    7374,
    7842,
    7868,
    7894,
    7920,
    7946,
    7972,
    7998,
    8024,
    8050,
    8518,
    8544,
    8570,
    8596,
    8622,
    8648,
    8674,
    8700,
    8726,
    9194,
    9220,
    9246,
    9272,
    9298,
    9324,
    9350,
    9376,
    9402,
    9870,
    9896,
    9922,
    9948,
    9974,
    10000,
    10026,
    10052,
    10078,
    10546,
    10572,
    10598,
    10624,
    10650,
    10676,
    10702,
    10728,
    10754,
    11222,
    11248,
    11274,
    11300,
    11326,
    11352,
    11378,
    11404,
    11430,
    11898,
    11924,
    11950,
    11976,
    12002,
    12028,
    12054,
    12080,
    12106,
    12574,
    12600,
    12626,
    12652,
    12678,
    12704,
    12730,
    12756,
    12782,
    41,
    67,
    93,
    119,
    145,
    171,
    197,
    223,
    249,
    509,
    535,
    561,
    587,
    613,
    639,
    665,
    7165,
    7191,
    7217,
    7243,
    7269,
    7295,
    7321,
    7347,
    7373,
    7841,
    7867,
    7893,
    7919,
    7945,
    7971,
    7997,
    8023,
    8049,
    8517,
    8543,
    8569,
    8595,
    8621,
    8647,
    8673,
    8699,
    8725,
    9193,
    9219,
    9245,
    9271,
    9297,
    9323,
    9349,
    9375,
    9401,
    9869,
    9895,
    9921,
    9947,
    9973,
    9999,
    10025,
    10051,
    10077,
    10545,
    10571,
    10597,
    10623,
    10649,
    10675,
    10701,
    10727,
    10753,
    11221,
    11247,
    11273,
    11299,
    11325,
    11351,
    11377,
    11403,
    11429,
    11897,
    11923,
    11949,
    11975,
    12001,
    12027,
    12053,
    12079,
    12105,
    12573,
    12599,
    12625,
    12651,
    12677,
    12703,
    12729,
    12755,
    12781,
    40,
    66,
    92,
    118,
    144,
    170,
    196,
    222,
    248,
    508,
    534,
    560,
    586,
    612,
    638,
    664,
    7164,
    7190,
    7216,
    7242,
    7268,
    7294,
    7320,
    7346,
    7372,
    7840,
    7866,
    7892,
    7918,
    7944,
    7970,
    7996,
    8022,
    8048,
    8516,
    8542,
    8568,
    8594,
    8620,
    8646,
    8672,
    8698,
    8724,
    9192,
    9218,
    9244,
    9270,
    9296,
    9322,
    9348,
    9374,
    9400,
    9868,
    9894,
    9920,
    9946,
    9972,
    9998,
    10024,
    10050,
    10076,
    10544,
    10570,
    10596,
    10622,
    10648,
    10674,
    10700,
    10726,
    10752,
    11220,
    11246,
    11272,
    11298,
    11324,
    11350,
    11376,
    11402,
    11428,
    11896,
    11922,
    11948,
    11974,
    12000,
    12026,
    12052,
    12078,
    12104,
    12572,
    12598,
    12624,
    12650,
    12676,
    12702,
    12728,
    12754,
    12780,
    39,
    65,
    91,
    117,
    143,
    169,
    195,
    221,
    247,
    507,
    533,
    559,
    585,
    611,
    637,
    663,
    7163,
    7189,
    7215,
    7241,
    7267,
    7293,
    7319,
    7345,
    7371,
    7839,
    7865,
    7891,
    7917,
    7943,
    7969,
    7995,
    8021,
    8047,
    8515,
    8541,
    8567,
    8593,
    8619,
    8645,
    8671,
    8697,
    8723,
    9191,
    9217,
    9243,
    9269,
    9295,
    9321,
    9347,
    9373,
    9399,
    9867,
    9893,
    9919,
    9945,
    9971,
    9997,
    10023,
    10049,
    10075,
    10543,
    10569,
    10595,
    10621,
    10647,
    10673,
    10699,
    10725,
    10751,
    11219,
    11245,
    11271,
    11297,
    11323,
    11349,
    11375,
    11401,
    11427,
    11895,
    11921,
    11947,
    11973,
    11999,
    12025,
    12051,
    12077,
    12103,
    12571,
    12597,
    12623,
    12649,
    12675,
    12701,
    12727,
    12753,
    12779,
    38,
    64,
    90,
    116,
    142,
    168,
    194,
    220,
    246,
    506,
    532,
    558,
    584,
    610,
    636,
    662,
    7162,
    7188,
    7214,
    7240,
    7266,
    7292,
    7318,
    7344,
    7370,
    7838,
    7864,
    7890,
    7916,
    7942,
    7968,
    7994,
    8020,
    8046,
    8514,
    8540,
    8566,
    8592,
    8618,
    8644,
    8670,
    8696,
    8722,
    9190,
    9216,
    9242,
    9268,
    9294,
    9320,
    9346,
    9372,
    9398,
    9866,
    9892,
    9918,
    9944,
    9970,
    9996,
    10022,
    10048,
    10074,
    10542,
    10568,
    10594,
    10620,
    10646,
    10672,
    10698,
    10724,
    10750,
    11218,
    11244,
    11270,
    11296,
    11322,
    11348,
    11374,
    11400,
    11426,
    11894,
    11920,
    11946,
    11972,
    11998,
    12024,
    12050,
    12076,
    12102,
    12570,
    12596,
    12622,
    12648,
    12674,
    12700,
    12726,
    12752,
    12778,
    37,
    63,
    89,
    115,
    141,
    167,
    193,
    219,
    245,
    505,
    531,
    557,
    583,
    609,
    635,
    661,
    7161,
    7187,
    7213,
    7239,
    7265,
    7291,
    7317,
    7343,
    7369,
    7837,
    7863,
    7889,
    7915,
    7941,
    7967,
    7993,
    8019,
    8045,
    8513,
    8539,
    8565,
    8591,
    8617,
    8643,
    8669,
    8695,
    8721,
    9189,
    9215,
    9241,
    9267,
    9293,
    9319,
    9345,
    9371,
    9397,
    9865,
    9891,
    9917,
    9943,
    9969,
    9995,
    10021,
    10047,
    10073,
    10541,
    10567,
    10593,
    10619,
    10645,
    10671,
    10697,
    10723,
    10749,
    11217,
    11243,
    11269,
    11295,
    11321,
    11347,
    11373,
    11399,
    11425,
    11893,
    11919,
    11945,
    11971,
    11997,
    12023,
    12049,
    12075,
    12101,
    12569,
    12595,
    12621,
    12647,
    12673,
    12699,
    12725,
    12751,
    12777
)
val res11 = setOf(
    0,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    11,
    12,
    13,
    14,
    15,
    16,
    17,
    18,
    19,
    20,
    21,
    22,
    23,
    24,
    25,
    275,
    276,
    277,
    278,
    279,
    280,
    281,
    282,
    283,
    301,
    302,
    303,
    304,
    305,
    306,
    307,
    308,
    309,
    327,
    328,
    329,
    330,
    331,
    332,
    333,
    334,
    335,
    353,
    354,
    355,
    356,
    357,
    358,
    359,
    360,
    361,
    379,
    380,
    381,
    382,
    383,
    384,
    385,
    386,
    387,
    405,
    406,
    407,
    408,
    409,
    410,
    411,
    412,
    413,
    431,
    432,
    433,
    434,
    435,
    436,
    437,
    438,
    439,
    457,
    458,
    459,
    460,
    461,
    462,
    463,
    464,
    465,
    483,
    484,
    485,
    486,
    487,
    488,
    489,
    490,
    491
)
val res12 = setOf(0, 10, 11, 12, 13, 14, 15, 16, 17, 18)

val part1: Executable = { input ->
    val programs = decodeProgram(input)

//    val result0 =
//        (9 downTo 1).asSequence().flatMap { w ->
//            (0..100000).map { z -> Pair(z, programs[13].result(Alu(z = z, input = listOf(w)))) }
//        }.filter { it.second.z == 0 }
//            .map { it.first }.toSet()

//    val result1 =
//        (9 downTo 1).flatMap { w ->
//            (0..1000000).map { z -> Pair(z, programs[12].result(Alu(z = z, input = listOf(w)))) }
//        }.filter { it.second.z in res0 }
//            .map { it.first }.toSet()

//    val result2 =
//        (9 downTo 1).asSequence().flatMap { w ->
//            (0..5000000).map { z -> Pair(z, programs[11].result(Alu(z = z, input = listOf(w)))) }
//        }.filter { it.second.z in res1 }
//            .map { it.first }.toSet()

    val result3 =
        (9 downTo 1).asSequence().flatMap { w ->
            (0..1000000).map { z -> Pair(z, programs[10].result(Alu(z = z, input = listOf(w)))) }
        }.filter { it.second.z in res2 }
            .map { it.first }.toSet()

//    val result4 =
//        (9 downTo 1).asSequence().flatMap { w ->
//            (0..10000000).map { z -> Pair(z, programs[9].result(Alu(z = z, input = listOf(w)))) }
//        }.filter { it.second.z in result3 }
//            .map { it.first }.toSet()

//    val result5 =
//        (9 downTo 1).asSequence().flatMap { w ->
//            (0..10000000).map { z -> Pair(z, programs[8].result(Alu(z = z, input = listOf(w)))) }
//        }.filter { it.second.z in res4 }
//            .map { it.first }.toSet()

//    val result6 =
//        (9 downTo 1).asSequence().flatMap { w ->
//            (0..1000000).map { z -> Pair(z, programs[7].result(Alu(z = z, input = listOf(w)))) }
//        }.filter { it.second.z in res5 }
//            .map { it.first }.toSet()
//
//    val result7 =
//        (9 downTo 1).asSequence().flatMap { w ->
//            (0..1000000).map { z -> Pair(z, programs[6].result(Alu(z = z, input = listOf(w)))) }
//        }.filter { it.second.z in result6 }
//            .map { it.first }.toSet()
//
//    val result8 =
//        (9 downTo 1).asSequence().flatMap { w ->
//            (0..1000000).map { z -> Pair(z, programs[5].result(Alu(z = z, input = listOf(w)))) }
//        }.filter { it.second.z in result7 }
//            .map { it.first }.toSet()

//    val result9 =
//        (9 downTo 1).asSequence().flatMap { w ->
//            (0..10000000).map { z -> Pair(z, programs[4].result(Alu(z = z, input = listOf(w)))) }
//        }.filter { it.second.z in res8 }
//            .map { it.first }.toSet()

//    val result10 =
//        (9 downTo 1).asSequence().flatMap { w ->
//            (0..10000000).map { z -> Pair(z, programs[3].result(Alu(z = z, input = listOf(w)))) }
//        }.filter { it.second.z in res9 }
//            .map { it.first }.toSet()

//    val result11 =
//        (9 downTo 1).asSequence().flatMap { w ->
//            (0..10000000).map { z -> Pair(z, programs[2].result(Alu(z = z, input = listOf(w)))) }
//        }.filter { it.second.z in res10 }
//            .map { it.first }.toSet()

//    val result12 =
//        (9 downTo 1).asSequence().flatMap { w ->
//            (0..10000000).map { z -> Pair(z, programs[1].result(Alu(z = z, input = listOf(w)))) }
//        }.filter { it.second.z in res11 }
//            .map { it.first }.toSet()

    (9 downTo 1).asSequence()
        .map { d13 -> Pair("$d13", programs[0].result(Alu(input = listOf(d13)))) }
        .filter { it.second.z in res12 }
        .flatMap { (code, alu) ->
            (9 downTo 1).asSequence()
                .map { d12 -> Pair("$code$d12", programs[1].result(alu.copy(input = listOf(d12)))) }
                .filter { it.second.z in res11 }
                .flatMap { (code, alu) ->
                    (9 downTo 1).asSequence()
                        .map { d11 -> Pair("$code$d11", programs[2].result(alu.copy(input = listOf(d11)))) }
                        .filter { it.second.z in res10 }
                        .flatMap { (code, alu) ->
                            (9 downTo 1).asSequence()
                                .map { d10 -> Pair("$code$d10", programs[3].result(alu.copy(input = listOf(d10)))) }
                                .filter { it.second.z in res9 }
                                .flatMap { (code, alu) ->
                                    (9 downTo 1).asSequence()
                                        .map { d9 -> Pair("$code$d9", programs[4].result(alu.copy(input = listOf(d9)))) }
                                        .filter { it.second.z in res8 }
                                        .flatMap { (code, alu) ->
                                            (9 downTo 1).asSequence()
                                                .map { d8 -> Pair("$code$d8", programs[5].result(alu.copy(input = listOf(d8)))) }
                                                .filter { it.second.z in res7 }
                                                .flatMap { (code, alu) ->
                                                    (9 downTo 1).asSequence()
                                                        .map { d7 -> Pair("$code$d7", programs[6].result(alu.copy(input = listOf(d7)))) }
                                                        .filter { it.second.z in res6 }
                                                        .flatMap { (code, alu) ->
                                                            (9 downTo 1).asSequence()
                                                                .map { d6 -> Pair("$code$d6", programs[7].result(alu.copy(input = listOf(d6)))) }
                                                                .filter { it.second.z in res5 }
                                                                .flatMap { (code, alu) ->
                                                                    (9 downTo 1).asSequence()
                                                                        .map { d5 -> Pair("$code$d5", programs[8].result(alu.copy(input = listOf(d5)))) }
                                                                        .filter { it.second.z in res4 }
                                                                        .flatMap { (code, alu) ->
                                                                            (9 downTo 1).asSequence()
                                                                                .map { d4 -> Pair("$code$d4", programs[9].result(alu.copy(input = listOf(d4)))) }
                                                                                .filter { it.second.z in result3 }
                                                                                .flatMap { (code, alu) ->
                                                                                    (9 downTo 1).asSequence()
                                                                                        .map { d3 -> Pair("$code$d3", programs[10].result(alu.copy(input = listOf(d3)))) }
                                                                                        .filter { it.second.z in res2 }
                                                                                        .flatMap { (code, alu) ->
                                                                                            (9 downTo 1).asSequence()
                                                                                                .map { d2 -> Pair("$code$d2", programs[11].result(alu.copy(input = listOf(d2)))) }
                                                                                                .filter { it.second.z in res1 }
                                                                                                .flatMap { (code, alu) ->
                                                                                                    (9 downTo 1).asSequence()
                                                                                                        .map { d1 -> Pair("$code$d1", programs[12].result(alu.copy(input = listOf(d1)))) }
                                                                                                        .filter { it.second.z in res0 }
                                                                                                        .flatMap { (code, alu) ->
                                                                                                            (9 downTo 1).asSequence()
                                                                                                                .map { d0 -> Pair("$code$d0", programs[13].result(alu.copy(input = listOf(d0)))) }
                                                                                                                .filter { it.second.z == 0 }
                                                                                                        }
                                                                                                }
                                                                                        }
                                                                                }
                                                                        }
                                                                }
                                                        }
                                                }
                                        }
                                }
                        }
                }
        }.last().first
}

val part2: Executable = { TODO() }

fun progr(a: Int, b: Int, c: Int): (Int, Int) -> Int = { acc, w ->
    val x3 = if ((acc % 26) + b == w) 0 else 1
    acc * ((25 * x3) + 1) / a + (w + c) * x3
}

fun decodeProgram(input: Sequence<String>): List<List<Instruction>> {
    val rawProgram = input.map(::parseLine).toList()

    tailrec fun go(instructions: List<Instruction>, programs: List<List<Instruction>>): List<List<Instruction>> =
        if (instructions.isEmpty()) {
            programs
        } else {
            val program = listOf(instructions.first()) + instructions.drop(1).takeWhile { it !is Inp }
            go(instructions.drop(program.size), programs + listOf(program))
        }

    return go(rawProgram, emptyList())
}

fun extractDigitProgram(program: List<Instruction>): Pair<List<Instruction>, List<Instruction>> {
    val digitProgram = listOf(program.first()) + program.drop(1).takeWhile { it !is Inp }

    return Pair(digitProgram, program.drop(digitProgram.size))
}

val inpRegex = "inp ([xyzw])".toRegex()
val biOperandRegex = "(inp|add|mul|div|mod|eql) ([xyzw])(?: ([\\-0-9xyzw]+))?".toRegex()
fun parseLine(line: String): Instruction =
    inpRegex.find(line)?.destructured
        ?.let { (a) ->
            Inp.inp(Register.valueOf(a.uppercase()))
        }
        ?: biOperandRegex.find(line)?.destructured
            ?.let { (command, a, b) ->
                val regA = Register.valueOf(a.uppercase())
                val valueB = b.toIntOrNull()?.right() ?: Register.valueOf(b.uppercase()).left()
                when (command) {
                    "add" -> Add(regA, valueB)
                    "mul" -> Mul(regA, valueB)
                    "div" -> Div(regA, valueB)
                    "mod" -> Mod(regA, valueB)
                    "eql" -> Eql(regA, valueB)
                    else -> throw Exception("Could not parse line $line")
                }
            } ?: throw Exception("Could not parse line $line")


enum class Register(val get: (Alu) -> Int, val set: (Alu, Int) -> Alu) {
    X(get = { alu -> alu.x }, set = { alu, value -> alu.copy(x = value) }),
    Y(get = { alu -> alu.y }, set = { alu, value -> alu.copy(y = value) }),
    Z(get = { alu -> alu.z }, set = { alu, value -> alu.copy(z = value) }),
    W(get = { alu -> alu.w }, set = { alu, value -> alu.copy(w = value) })
}

data class Alu(val x: Int = 0, val y: Int = 0, val z: Int = 0, val w: Int = 0, val input: List<Int>)

fun List<Instruction>.result(alu: Alu): Alu =
    fold(alu) { acc, instruction -> instruction.next(acc) }

sealed interface Instruction {
    fun next(alu: Alu): Alu

}

data class Inp(val a: Register) : Instruction {
    override fun next(alu: Alu): Alu {
        val value = alu.input.first()
        return a.set(alu.copy(input = alu.input.drop(1)), value)
    }

    companion object {
        fun inp(a: Register): Instruction = Inp(a)
    }
}

data class Add(val a: Register, val b: Either<Register, Int>) : Instruction {
    override fun next(alu: Alu): Alu = a.set(alu, a.get(alu) + b.fold({ it.get(alu) }, { it }))

    companion object {
        fun add(a: Register, value: Int): Instruction = Add(a, value.right())
        fun add(a: Register, b: Register): Instruction = Add(a, b.left())
    }
}

data class Mul(val a: Register, val b: Either<Register, Int>) : Instruction {
    override fun next(alu: Alu): Alu = a.set(alu, a.get(alu) * b.fold({ it.get(alu) }, { it }))

    companion object {
        fun mul(a: Register, value: Int): Instruction = Mul(a, value.right())
        fun mul(a: Register, b: Register): Instruction = Mul(a, b.left())
    }
}

data class Div(val a: Register, val b: Either<Register, Int>) : Instruction {
    override fun next(alu: Alu): Alu {
        val bValue = b.fold({ it.get(alu) }, { it })
        if (bValue == 0) throw ArithmeticException("Can not divide by 0")
        return a.set(alu, a.get(alu) / b.fold({ it.get(alu) }, { it }))
    }

    companion object {
        fun div(a: Register, value: Int): Instruction = Div(a, value.right())
        fun div(a: Register, b: Register): Instruction = Div(a, b.left())
    }
}

data class Mod(val a: Register, val b: Either<Register, Int>) : Instruction {
    override fun next(alu: Alu): Alu {
        val aValue = a.get(alu)
        if (aValue < 0) throw ArithmeticException("Invalid value for a in mod: $aValue")
        val bValue = b.fold({ it.get(alu) }, { it })
        if (bValue <= 0) throw ArithmeticException("Invalid value for b in mod: $bValue")
        return a.set(alu, aValue % bValue)
    }

    companion object {
        fun mod(a: Register, value: Int): Instruction = Mod(a, value.right())
        fun mod(a: Register, b: Register): Instruction = Mod(a, b.left())
    }
}

data class Eql(val a: Register, val b: Either<Register, Int>) : Instruction {
    override fun next(alu: Alu): Alu = a.set(alu, if (a.get(alu) == b.fold({ it.get(alu) }, { it })) 1 else 0)

    companion object {
        fun eql(a: Register, value: Int): Instruction = Eql(a, value.right())
        fun eql(a: Register, b: Register): Instruction = Eql(a, b.left())
    }
}

